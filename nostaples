#!/usr/bin/python

#~ This file is part of NoStaples.

#~ NoStaples is free software: you can redistribute it and/or modify
#~ it under the terms of the GNU General Public License as published by
#~ the Free Software Foundation, either version 3 of the License, or
#~ (at your option) any later version.

#~ NoStaples is distributed in the hope that it will be useful,
#~ but WITHOUT ANY WARRANTY; without even the implied warranty of
#~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#~ GNU General Public License for more details.

#~ You should have received a copy of the GNU General Public License
#~ along with NoStaples.  If not, see <http://www.gnu.org/licenses/>.

'''
This module parses command line options, checks that imports are available,
and bootstraps the NoStaples application.
'''

import optparse
import sys

import pygtk
pygtk.require('2.0')
import gtk

# COMMAND LINE PARSING

# Functions to pretty-print debugging info
def print_device_debug(i, device):
    """Pretty-print device information."""
    print 'Device %i' % i
    print ''
    print 'Name:\t%s' % device.name
    print 'Vendor:\t%s' % device.vendor
    print 'Model:\t%s' % device.model
    print 'Type:\t%s' % device.type
    print ''
    
    try:
        device.open()
        
        j = 1
        for option in device.options.values():
            print_option_debug(j, option)
            
            print ''
            j = j + 1
            
        device.close()
    except  Exception:
        print '\t**Failed to open device.**'
    
def print_option_debug(j, option):
    """Pretty-print device option information."""
    print '\tOption %i' % j
    print ''
    print '\tName:\t%s' % option._name
    print '\tTitle:\t%s' % option._title
    print '\tDesc:\t%s' % option._description
    print '\tType:\t%s' % option._type
    print '\tUnit:\t%s' % option._unit
    print '\tSize:\t%s' % option._size
    print '\tCap:\t%s' % option._capability
    print '\tConstraint Type:\t%s' % option._constraint_type
    print '\tConstraint:\t', option._constraint
    
    if not option.is_active():
        print '\tValue:\tNot active.'
    elif not option.is_soft_gettable():
        print '\tValue:\tNot soft-gettable.'
    else:
        try:
            print '\tValue:\t%s' % str(option.value)
        except Exception:
            print '\t**Failed to get current value for option.**'

# Parse command line options
parser = optparse.OptionParser()
parser.add_option("--debugdevices", action="store_true", dest="debug_devices",
    help="print debugging information for all connected devices")

(options, args) = parser.parse_args()
    
if options.debug_devices:
    import nostaples.sane as saneme
    
    sane_manager = saneme.SaneMe()
    devices = sane_manager.get_device_list()
    
    if len(devices) == 0:
        print 'No devices found.'
    
    i = 1
    for device in devices:
        print_device_debug(i, device)
        
        print ''
        i = i + 1
    
    sys.exit()

# CHECK IMPORT VERSIONS
        
def display_import_error(message):      
    """
    Displays a GTK message dialog containing the import error and then
    exits the application.
    """
    dialog = gtk.MessageDialog(
        parent=None, flags=0, type=gtk.MESSAGE_ERROR, buttons=gtk.BUTTONS_NONE)
    dialog.set_title('')

    primary = "<big><b>A required package is not installed.</b></big>"
    secondary = '%s' % message

    dialog.set_markup(primary)
    dialog.format_secondary_markup(secondary)

    dialog.add_button(gtk.STOCK_CLOSE, gtk.RESPONSE_CLOSE)

    response = dialog.run()        
    dialog.destroy()
    
    sys.exit() 

# Python
if sys.version_info < (2, 5) or sys.version_info >= (3, 0):
    display_import_error(
        'NoStaples requires Python version 2.5 or later (but not version 3.0 or later).')
    
# GTK
if gtk.gtk_version < (2, 6, 0):
    display_import_error(
        'NoStaples requires GTK+ version 2.6 or later.')
    
if gtk.pygtk_version < (2, 8, 0):
    display_import_error(
        'NoStaples requires PyGTK version 2.8 or later.')

# PIL
try:
    import Image
except ImportError:
    display_import_error(
        'NoStaples requires the Python Imaging Library (PIL) 1.1.6 or later.')
    
pil_version = tuple([int(i) for i in Image.VERSION.split('.')])
    
if pil_version < (1, 1, 6):
    display_import_error(
        'NoStaples requires the Python Imaging Library (PIL) version 1.1.6 or later.')

# ReportLab
try:
    import reportlab
except ImportError:
    display_import_error(
        'NoStaples requires ReportLab version 2.1 or later.')
    
reportlab_version = tuple([int(i) for i in reportlab.Version.split('.')])

if reportlab_version < (2, 1):
    display_import_error(
        'NoStaples requires ReportLab version 2.1 or later.')

# Python-gtkmvc
try:
    import gtkmvc
except ImportError:
    display_import_error(
        'NoStaples requires python-gtkmvc version 1.2.2 (exactly).')
    
pygtkmvc_version = gtkmvc.get_version()

if pygtkmvc_version != (1, 2, 2):
    display_import_error(
        'NoStaples requires python-gtkmvc version 1.2.2 (exactly).')
    
# BOOTSTRAP

from nostaples.application import Application
nostaples = Application()
nostaples.run()
